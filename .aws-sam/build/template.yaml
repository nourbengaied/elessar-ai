AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Parsea - AI-Powered Transaction Classification
Globals:
  Function:
    Timeout: 300
    MemorySize: 1024
    Runtime: python3.11
    Environment:
      Variables:
        ENVIRONMENT: production
        DYNAMODB_TABLE:
          Ref: TransactionsTable
        JWT_SECRET:
          Ref: JWTSecret
Parameters:
  JWTSecret:
    Type: String
    Description: JWT secret key for authentication
    NoEcho: true
    Default: your-super-secret-jwt-key-change-this
Resources:
  TransactionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: parsea-transactions
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      - AttributeName: user_id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      - AttributeName: user_id
        KeyType: RANGE
      Tags:
      - Key: Environment
        Value: production
      - Key: Project
        Value: parsea
  ParseaBackendFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: parsea-backend
      CodeUri: ParseaBackendFunction
      Handler: lambda_handler.lambda_handler
      Events:
        Root:
          Type: Api
          Properties:
            Path: /
            Method: ANY
            RestApiId:
              Ref: ParseaApi
        ApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId:
              Ref: ParseaApi
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TransactionsTable
      - CloudWatchLogsFullAccess
      Environment:
        Variables:
          ENVIRONMENT: production
          DYNAMODB_TABLE:
            Ref: TransactionsTable
          JWT_SECRET:
            Ref: JWTSecret
    Metadata:
      SamResourceId: ParseaBackendFunction
  ParseaApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: parsea-api
      StageName: prod
      Cors:
        AllowMethods: '''GET,POST,PUT,DELETE,OPTIONS'''
        AllowHeaders: '''Content-Type,Authorization'''
        AllowOrigin: '''*'''
        AllowCredentials: '''false'''
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: parsea-frontend-${AWS::AccountId}-${AWS::Region}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      Tags:
      - Key: Environment
        Value: production
      - Key: Project
        Value: parsea
  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: FrontendBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: CloudFrontOAI
          Effect: Allow
          Principal:
            AWS:
              Fn::Sub: arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity
                ${CloudFrontOAI}
          Action: s3:GetObject
          Resource:
            Fn::Sub: arn:aws:s3:::${FrontendBucket}/*
  FrontendDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - Id: S3Origin
          DomainName:
            Fn::GetAtt:
            - FrontendBucket
            - RegionalDomainName
          S3OriginConfig:
            OriginAccessIdentity:
              Fn::Sub: origin-access-identity/cloudfront/${CloudFrontOAI}
        Enabled: true
        DefaultRootObject: index.html
        PriceClass: PriceClass_100
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          CachedMethods:
          - GET
          - HEAD
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          MinTTL: 0
          DefaultTTL: 3600
          MaxTTL: 86400
        CustomErrorResponses:
        - ErrorCode: 403
          ResponsePagePath: /index.html
          ResponseCode: 200
          ErrorCachingMinTTL: 0
        - ErrorCode: 404
          ResponsePagePath: /index.html
          ResponseCode: 200
          ErrorCachingMinTTL: 0
        Restrictions:
          GeoRestriction:
            RestrictionType: none
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
      Tags:
      - Key: Environment
        Value: production
      - Key: Project
        Value: parsea
  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment:
          Fn::Sub: OAI for ${AWS::StackName}
Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${ParseaApi}.execute-api.${AWS::Region}.amazonaws.com/prod/
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-ApiUrl
  FrontendUrl:
    Description: CloudFront distribution URL
    Value:
      Fn::Sub: https://${FrontendDistribution.DomainName}
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-FrontendUrl
  DynamoDBTable:
    Description: DynamoDB table name
    Value:
      Ref: TransactionsTable
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-DynamoDBTable
  S3Bucket:
    Description: S3 bucket for frontend
    Value:
      Ref: FrontendBucket
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-S3Bucket
